/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.2
  Forc version: 0.64.0
  Fuel-Core version: 0.36.0
*/

import { ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { DummyStablecoin } from "./DummyStablecoin";

const bytecode = decompressBytecode("");

export class DummyStablecoinFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, DummyStablecoin.abi, accountOrProvider);
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<DummyStablecoin>> {
    const factory = new DummyStablecoinFactory(wallet);

    return factory.deploy({
      storageSlots: DummyStablecoin.storageSlots,
      ...options,
    });
  }
}
