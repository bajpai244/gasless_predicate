/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.2
  Forc version: 0.63.1
  Fuel-Core version: 0.34.0
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

import type { Enum, Vec } from "./common";

export type TxInputInput = Enum<{ InputCoin: InputCoinInput }>;
export type TxInputOutput = Enum<{ InputCoin: InputCoinOutput }>;
export type TxOutputInput = Enum<{ OutputCoin: OutputCoinInput }>;
export type TxOutputOutput = Enum<{ OutputCoin: OutputCoinOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type InputCoinInput = { tx_id: string, output_index: BigNumberish };
export type InputCoinOutput = { tx_id: string, output_index: number };
export type OutputCoinInput = { to: AddressInput, amount: BigNumberish, asset_id: AssetIdInput };
export type OutputCoinOutput = { to: AddressOutput, amount: BN, asset_id: AssetIdOutput };

export type GaslessWalletConfigurables = Partial<{
    PUBLIC_KEY: string;
}>;

export type GaslessWalletInputs = [tx_inputs: Vec<TxInputInput>, tx_outputs: Vec<TxOutputInput>, signature: string];

export type GaslessWalletParameters = Omit<
  PredicateParams<GaslessWalletInputs, GaslessWalletConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum TxInput",
      "concreteTypeId": "67c80f7883622d4f66c11d53e2f037ede5841cd030f0ca3d1dc936d0128507cb",
      "metadataTypeId": 2
    },
    {
      "type": "enum TxOutput",
      "concreteTypeId": "af34e1a28aeada2641e09fe17c04cf603395e41324ed732fded5bcb116df6a77",
      "metadataTypeId": 3
    },
    {
      "type": "struct std::b512::B512",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "metadataTypeId": 10
    },
    {
      "type": "struct std::vec::Vec<enum TxInput>",
      "concreteTypeId": "bc7c44c1611de3647c8fb6195acf2d5dd763d20f10a96cbd4a3d7b394d094cd4",
      "metadataTypeId": 12,
      "typeArguments": [
        "67c80f7883622d4f66c11d53e2f037ede5841cd030f0ca3d1dc936d0128507cb"
      ]
    },
    {
      "type": "struct std::vec::Vec<enum TxOutput>",
      "concreteTypeId": "97ff3cc17f62db65f7192a97e4b66c12a128d3e87622971a0c5867781dd581d3",
      "metadataTypeId": 12,
      "typeArguments": [
        "af34e1a28aeada2641e09fe17c04cf603395e41324ed732fded5bcb116df6a77"
      ]
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 2]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": 1
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 1
    },
    {
      "type": "enum TxInput",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "InputCoin",
          "typeId": 6
        }
      ]
    },
    {
      "type": "enum TxOutput",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "OutputCoin",
          "typeId": 7
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 4
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 5
    },
    {
      "type": "struct InputCoin",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "tx_id",
          "typeId": 1
        },
        {
          "name": "output_index",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct OutputCoin",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "to",
          "typeId": 8
        },
        {
          "name": "amount",
          "typeId": 14
        },
        {
          "name": "asset_id",
          "typeId": 9
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    },
    {
      "type": "struct std::b512::B512",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "ptr",
          "typeId": 5
        },
        {
          "name": "cap",
          "typeId": 14
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "buf",
          "typeId": 11,
          "typeArguments": [
            {
              "name": "",
              "typeId": 4
            }
          ]
        },
        {
          "name": "len",
          "typeId": 14
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "type": "u16",
      "metadataTypeId": 13
    },
    {
      "type": "u64",
      "metadataTypeId": 14
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "tx_inputs",
          "concreteTypeId": "bc7c44c1611de3647c8fb6195acf2d5dd763d20f10a96cbd4a3d7b394d094cd4"
        },
        {
          "name": "tx_outputs",
          "concreteTypeId": "97ff3cc17f62db65f7192a97e4b66c12a128d3e87622971a0c5867781dd581d3"
        },
        {
          "name": "signature",
          "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322"
        }
      ],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " extract inputs, and outputs"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " extract the script bytecode hash"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " calculate the tranasaction hash based on that"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            ""
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " V0, user can only sign over a single input and single output { only of type coin }"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " txn_hash = sha_256([[input_tx_id_bytes], [hash_of_serialized_output_type_coin]], [script_bytecodehash_bytes])"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "PUBLIC_KEY",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "offset": 13784
    }
  ]
};

const bytecode = decompressBytecode('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');

export class GaslessWallet extends Predicate<
  GaslessWalletInputs,
  GaslessWalletConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: GaslessWalletParameters) {
    super({ abi, bytecode, ...params });
  }
}
