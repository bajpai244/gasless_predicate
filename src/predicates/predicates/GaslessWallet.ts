/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.2
  Forc version: 0.63.1
  Fuel-Core version: 0.34.0
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

import type { Vec } from "./common";

export type GaslessWalletConfigurables = Partial<{
    PUBLIC_KEY: string;
}>;

export type GaslessWalletInputs = [input_tx_idxs: Vec<BigNumberish>, output_tx_idxs: Vec<BigNumberish>, signature: string];

export type GaslessWalletParameters = Omit<
  PredicateParams<GaslessWalletInputs, GaslessWalletConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::b512::B512",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "metadataTypeId": 4
    },
    {
      "type": "struct std::vec::Vec<u64>",
      "concreteTypeId": "d5bfe1d4e1ace20166c9b50cadd47e862020561bde24f5189cfc2723f5ed76f4",
      "metadataTypeId": 6,
      "typeArguments": [
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
      ]
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 2]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": 1
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 1
    },
    {
      "type": "generic T",
      "metadataTypeId": 2
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 3
    },
    {
      "type": "struct std::b512::B512",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "ptr",
          "typeId": 3
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        2
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "buf",
          "typeId": 5,
          "typeArguments": [
            {
              "name": "",
              "typeId": 2
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        2
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "input_tx_idxs",
          "concreteTypeId": "d5bfe1d4e1ace20166c9b50cadd47e862020561bde24f5189cfc2723f5ed76f4"
        },
        {
          "name": "output_tx_idxs",
          "concreteTypeId": "d5bfe1d4e1ace20166c9b50cadd47e862020561bde24f5189cfc2723f5ed76f4"
        },
        {
          "name": "signature",
          "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322"
        }
      ],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " extract inputs, and outputs"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " extract the script bytecode hash"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " calculate the tranasaction hash based on that"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            ""
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " V0, user can only sign over a single input and single output { only of type coin }"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " txn_hash = sha_256([[input_tx_id_bytes], [hash_of_serialized_output_type_coin]], [script_bytecodehash_bytes])"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "PUBLIC_KEY",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "offset": 12152
    }
  ]
};

const bytecode = decompressBytecode('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');

export class GaslessWallet extends Predicate<
  GaslessWalletInputs,
  GaslessWalletConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: GaslessWalletParameters) {
    super({ abi, bytecode, ...params });
  }
}
